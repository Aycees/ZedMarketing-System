// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum EmployeeType {
  FULL_TIME
  PART_TIME
}

enum AttendanceStatus {
  PRESENT
  ABSENT
  LATE
  HALF_DAY
}

enum LRStatus {
  APPROVED
  REJECTED
  PENDING
}

enum EmployeeStatus {
  ACTIVE
  INACTIVE
  ON_LEAVE
}

model Employee {
  id             String         @id @default(cuid())
  firstname      String
  middlename     String?
  lastname       String
  address        String
  contactNumber  String
  accountId      String?        @unique
  account        Account?       @relation(fields: [accountId], references: [id])
  jobId          String?
  job            Job?           @relation(fields: [jobId], references: [id])
  employeeType   EmployeeType
  employeeStatus EmployeeStatus
  isArchived     Boolean        @default(false)
  attendance     Attendance[]
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

model Account {
  id         String    @id @default(cuid())
  username   String    @unique
  password   String
  isArchived Boolean   @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  employee   Employee?
}

model Job {
  id            String       @id @default(cuid())
  title         String       @unique
  description   String?
  jobCategoryId String?
  isArchived    Boolean      @default(false)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  jobCategory   JobCategory? @relation(fields: [jobCategoryId], references: [id])
  employees     Employee[]
}

model JobCategory {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  isArchived  Boolean  @default(false)
  jobs        Job[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Attendance {
  id               String           @id @default(cuid())
  employeeId       String
  employee         Employee         @relation(fields: [employeeId], references: [id])
  time_in          DateTime         @default(now())
  attendanceStatus AttendanceStatus
  remark           String?
  isArchived       Boolean          @default(false)
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
}
